// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieRecord should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieRecord
    id="1"
    showtimes={Array []}
    thumbnail_url="thumbnail_url"
    title="title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="Thumbnail"
          className="thumbnail"
          src="thumbnail_url"
/>,
        <div
          className="info"
>
          <span
                    className="title"
          >
                    title
          </span>
          <section
                    className="showtimes"
          >
                    <header>
                              Show times:
                    </header>
                    <ul>
                              
                    </ul>
                    <span
                              className="no-records"
                    >
                              no showtimes
                    </span>
          </section>
</div>,
        <Link
          className="button"
          replace={false}
          to="/movies/1"
>
          info
</Link>,
      ],
      "className": "movie-record",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "Thumbnail",
          "className": "thumbnail",
          "src": "thumbnail_url",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="title"
>
              title
</span>,
            <section
              className="showtimes"
>
              <header>
                            Show times:
              </header>
              <ul>
                            
              </ul>
              <span
                            className="no-records"
              >
                            no showtimes
              </span>
</section>,
          ],
          "className": "info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "title",
              "className": "title",
            },
            "ref": null,
            "rendered": "title",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <header>
                  Show times:
</header>,
                <ul>
                  
</ul>,
                <span
                  className="no-records"
>
                  no showtimes
</span>,
              ],
              "className": "showtimes",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Show times:",
                },
                "ref": null,
                "rendered": "Show times:",
                "type": "header",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": "ul",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "no showtimes",
                  "className": "no-records",
                },
                "ref": null,
                "rendered": "no showtimes",
                "type": "span",
              },
            ],
            "type": "section",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "info",
          "className": "button",
          "replace": false,
          "to": "/movies/1",
        },
        "ref": null,
        "rendered": "info",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="Thumbnail"
            className="thumbnail"
            src="thumbnail_url"
/>,
          <div
            className="info"
>
            <span
                        className="title"
            >
                        title
            </span>
            <section
                        className="showtimes"
            >
                        <header>
                                    Show times:
                        </header>
                        <ul>
                                    
                        </ul>
                        <span
                                    className="no-records"
                        >
                                    no showtimes
                        </span>
            </section>
</div>,
          <Link
            className="button"
            replace={false}
            to="/movies/1"
>
            info
</Link>,
        ],
        "className": "movie-record",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Thumbnail",
            "className": "thumbnail",
            "src": "thumbnail_url",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="title"
>
                title
</span>,
              <section
                className="showtimes"
>
                <header>
                                Show times:
                </header>
                <ul>
                                
                </ul>
                <span
                                className="no-records"
                >
                                no showtimes
                </span>
</section>,
            ],
            "className": "info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "title",
                "className": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <header>
                    Show times:
</header>,
                  <ul>
                    
</ul>,
                  <span
                    className="no-records"
>
                    no showtimes
</span>,
                ],
                "className": "showtimes",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Show times:",
                  },
                  "ref": null,
                  "rendered": "Show times:",
                  "type": "header",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "ul",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "no showtimes",
                    "className": "no-records",
                  },
                  "ref": null,
                  "rendered": "no showtimes",
                  "type": "span",
                },
              ],
              "type": "section",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "info",
            "className": "button",
            "replace": false,
            "to": "/movies/1",
          },
          "ref": null,
          "rendered": "info",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
